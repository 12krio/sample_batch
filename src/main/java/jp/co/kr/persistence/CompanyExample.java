package jp.co.kr.persistence;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class CompanyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    public CompanyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("COMPANY_ID is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("COMPANY_ID is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(Integer value) {
            addCriterion("COMPANY_ID =", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(Integer value) {
            addCriterion("COMPANY_ID <>", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(Integer value) {
            addCriterion("COMPANY_ID >", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPANY_ID >=", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(Integer value) {
            addCriterion("COMPANY_ID <", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(Integer value) {
            addCriterion("COMPANY_ID <=", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<Integer> values) {
            addCriterion("COMPANY_ID in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<Integer> values) {
            addCriterion("COMPANY_ID not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(Integer value1, Integer value2) {
            addCriterion("COMPANY_ID between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPANY_ID not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andAddressIsNull() {
            addCriterion("ADDRESS is null");
            return (Criteria) this;
        }

        public Criteria andAddressIsNotNull() {
            addCriterion("ADDRESS is not null");
            return (Criteria) this;
        }

        public Criteria andAddressEqualTo(String value) {
            addCriterion("ADDRESS =", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("ADDRESS <>", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("ADDRESS >", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("ADDRESS >=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("ADDRESS <", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("ADDRESS <=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLike(String value) {
            addCriterion("ADDRESS like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotLike(String value) {
            addCriterion("ADDRESS not like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressIn(List<String> values) {
            addCriterion("ADDRESS in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotIn(List<String> values) {
            addCriterion("ADDRESS not in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressBetween(String value1, String value2) {
            addCriterion("ADDRESS between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("ADDRESS not between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andOrgTypeIsNull() {
            addCriterion("ORG_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andOrgTypeIsNotNull() {
            addCriterion("ORG_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andOrgTypeEqualTo(String value) {
            addCriterion("ORG_TYPE =", value, "orgType");
            return (Criteria) this;
        }

        public Criteria andOrgTypeNotEqualTo(String value) {
            addCriterion("ORG_TYPE <>", value, "orgType");
            return (Criteria) this;
        }

        public Criteria andOrgTypeGreaterThan(String value) {
            addCriterion("ORG_TYPE >", value, "orgType");
            return (Criteria) this;
        }

        public Criteria andOrgTypeGreaterThanOrEqualTo(String value) {
            addCriterion("ORG_TYPE >=", value, "orgType");
            return (Criteria) this;
        }

        public Criteria andOrgTypeLessThan(String value) {
            addCriterion("ORG_TYPE <", value, "orgType");
            return (Criteria) this;
        }

        public Criteria andOrgTypeLessThanOrEqualTo(String value) {
            addCriterion("ORG_TYPE <=", value, "orgType");
            return (Criteria) this;
        }

        public Criteria andOrgTypeLike(String value) {
            addCriterion("ORG_TYPE like", value, "orgType");
            return (Criteria) this;
        }

        public Criteria andOrgTypeNotLike(String value) {
            addCriterion("ORG_TYPE not like", value, "orgType");
            return (Criteria) this;
        }

        public Criteria andOrgTypeIn(List<String> values) {
            addCriterion("ORG_TYPE in", values, "orgType");
            return (Criteria) this;
        }

        public Criteria andOrgTypeNotIn(List<String> values) {
            addCriterion("ORG_TYPE not in", values, "orgType");
            return (Criteria) this;
        }

        public Criteria andOrgTypeBetween(String value1, String value2) {
            addCriterion("ORG_TYPE between", value1, value2, "orgType");
            return (Criteria) this;
        }

        public Criteria andOrgTypeNotBetween(String value1, String value2) {
            addCriterion("ORG_TYPE not between", value1, value2, "orgType");
            return (Criteria) this;
        }

        public Criteria andCapitalIsNull() {
            addCriterion("CAPITAL is null");
            return (Criteria) this;
        }

        public Criteria andCapitalIsNotNull() {
            addCriterion("CAPITAL is not null");
            return (Criteria) this;
        }

        public Criteria andCapitalEqualTo(BigDecimal value) {
            addCriterion("CAPITAL =", value, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalNotEqualTo(BigDecimal value) {
            addCriterion("CAPITAL <>", value, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalGreaterThan(BigDecimal value) {
            addCriterion("CAPITAL >", value, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("CAPITAL >=", value, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalLessThan(BigDecimal value) {
            addCriterion("CAPITAL <", value, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("CAPITAL <=", value, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalIn(List<BigDecimal> values) {
            addCriterion("CAPITAL in", values, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalNotIn(List<BigDecimal> values) {
            addCriterion("CAPITAL not in", values, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CAPITAL between", value1, value2, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CAPITAL not between", value1, value2, "capital");
            return (Criteria) this;
        }

        public Criteria andBizTypeIsNull() {
            addCriterion("BIZ_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andBizTypeIsNotNull() {
            addCriterion("BIZ_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andBizTypeEqualTo(BigDecimal value) {
            addCriterion("BIZ_TYPE =", value, "bizType");
            return (Criteria) this;
        }

        public Criteria andBizTypeNotEqualTo(BigDecimal value) {
            addCriterion("BIZ_TYPE <>", value, "bizType");
            return (Criteria) this;
        }

        public Criteria andBizTypeGreaterThan(BigDecimal value) {
            addCriterion("BIZ_TYPE >", value, "bizType");
            return (Criteria) this;
        }

        public Criteria andBizTypeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("BIZ_TYPE >=", value, "bizType");
            return (Criteria) this;
        }

        public Criteria andBizTypeLessThan(BigDecimal value) {
            addCriterion("BIZ_TYPE <", value, "bizType");
            return (Criteria) this;
        }

        public Criteria andBizTypeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("BIZ_TYPE <=", value, "bizType");
            return (Criteria) this;
        }

        public Criteria andBizTypeIn(List<BigDecimal> values) {
            addCriterion("BIZ_TYPE in", values, "bizType");
            return (Criteria) this;
        }

        public Criteria andBizTypeNotIn(List<BigDecimal> values) {
            addCriterion("BIZ_TYPE not in", values, "bizType");
            return (Criteria) this;
        }

        public Criteria andBizTypeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BIZ_TYPE between", value1, value2, "bizType");
            return (Criteria) this;
        }

        public Criteria andBizTypeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BIZ_TYPE not between", value1, value2, "bizType");
            return (Criteria) this;
        }

        public Criteria andEmpCountIsNull() {
            addCriterion("EMP_COUNT is null");
            return (Criteria) this;
        }

        public Criteria andEmpCountIsNotNull() {
            addCriterion("EMP_COUNT is not null");
            return (Criteria) this;
        }

        public Criteria andEmpCountEqualTo(Integer value) {
            addCriterion("EMP_COUNT =", value, "empCount");
            return (Criteria) this;
        }

        public Criteria andEmpCountNotEqualTo(Integer value) {
            addCriterion("EMP_COUNT <>", value, "empCount");
            return (Criteria) this;
        }

        public Criteria andEmpCountGreaterThan(Integer value) {
            addCriterion("EMP_COUNT >", value, "empCount");
            return (Criteria) this;
        }

        public Criteria andEmpCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("EMP_COUNT >=", value, "empCount");
            return (Criteria) this;
        }

        public Criteria andEmpCountLessThan(Integer value) {
            addCriterion("EMP_COUNT <", value, "empCount");
            return (Criteria) this;
        }

        public Criteria andEmpCountLessThanOrEqualTo(Integer value) {
            addCriterion("EMP_COUNT <=", value, "empCount");
            return (Criteria) this;
        }

        public Criteria andEmpCountIn(List<Integer> values) {
            addCriterion("EMP_COUNT in", values, "empCount");
            return (Criteria) this;
        }

        public Criteria andEmpCountNotIn(List<Integer> values) {
            addCriterion("EMP_COUNT not in", values, "empCount");
            return (Criteria) this;
        }

        public Criteria andEmpCountBetween(Integer value1, Integer value2) {
            addCriterion("EMP_COUNT between", value1, value2, "empCount");
            return (Criteria) this;
        }

        public Criteria andEmpCountNotBetween(Integer value1, Integer value2) {
            addCriterion("EMP_COUNT not between", value1, value2, "empCount");
            return (Criteria) this;
        }

        public Criteria andBranchCountIsNull() {
            addCriterion("BRANCH_COUNT is null");
            return (Criteria) this;
        }

        public Criteria andBranchCountIsNotNull() {
            addCriterion("BRANCH_COUNT is not null");
            return (Criteria) this;
        }

        public Criteria andBranchCountEqualTo(Integer value) {
            addCriterion("BRANCH_COUNT =", value, "branchCount");
            return (Criteria) this;
        }

        public Criteria andBranchCountNotEqualTo(Integer value) {
            addCriterion("BRANCH_COUNT <>", value, "branchCount");
            return (Criteria) this;
        }

        public Criteria andBranchCountGreaterThan(Integer value) {
            addCriterion("BRANCH_COUNT >", value, "branchCount");
            return (Criteria) this;
        }

        public Criteria andBranchCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("BRANCH_COUNT >=", value, "branchCount");
            return (Criteria) this;
        }

        public Criteria andBranchCountLessThan(Integer value) {
            addCriterion("BRANCH_COUNT <", value, "branchCount");
            return (Criteria) this;
        }

        public Criteria andBranchCountLessThanOrEqualTo(Integer value) {
            addCriterion("BRANCH_COUNT <=", value, "branchCount");
            return (Criteria) this;
        }

        public Criteria andBranchCountIn(List<Integer> values) {
            addCriterion("BRANCH_COUNT in", values, "branchCount");
            return (Criteria) this;
        }

        public Criteria andBranchCountNotIn(List<Integer> values) {
            addCriterion("BRANCH_COUNT not in", values, "branchCount");
            return (Criteria) this;
        }

        public Criteria andBranchCountBetween(Integer value1, Integer value2) {
            addCriterion("BRANCH_COUNT between", value1, value2, "branchCount");
            return (Criteria) this;
        }

        public Criteria andBranchCountNotBetween(Integer value1, Integer value2) {
            addCriterion("BRANCH_COUNT not between", value1, value2, "branchCount");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("STATUS =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("STATUS <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("STATUS >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("STATUS >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("STATUS <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("STATUS <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("STATUS like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("STATUS not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("STATUS in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("STATUS not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("STATUS between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("STATUS not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andLandFlgIsNull() {
            addCriterion("LAND_FLG is null");
            return (Criteria) this;
        }

        public Criteria andLandFlgIsNotNull() {
            addCriterion("LAND_FLG is not null");
            return (Criteria) this;
        }

        public Criteria andLandFlgEqualTo(Integer value) {
            addCriterion("LAND_FLG =", value, "landFlg");
            return (Criteria) this;
        }

        public Criteria andLandFlgNotEqualTo(Integer value) {
            addCriterion("LAND_FLG <>", value, "landFlg");
            return (Criteria) this;
        }

        public Criteria andLandFlgGreaterThan(Integer value) {
            addCriterion("LAND_FLG >", value, "landFlg");
            return (Criteria) this;
        }

        public Criteria andLandFlgGreaterThanOrEqualTo(Integer value) {
            addCriterion("LAND_FLG >=", value, "landFlg");
            return (Criteria) this;
        }

        public Criteria andLandFlgLessThan(Integer value) {
            addCriterion("LAND_FLG <", value, "landFlg");
            return (Criteria) this;
        }

        public Criteria andLandFlgLessThanOrEqualTo(Integer value) {
            addCriterion("LAND_FLG <=", value, "landFlg");
            return (Criteria) this;
        }

        public Criteria andLandFlgIn(List<Integer> values) {
            addCriterion("LAND_FLG in", values, "landFlg");
            return (Criteria) this;
        }

        public Criteria andLandFlgNotIn(List<Integer> values) {
            addCriterion("LAND_FLG not in", values, "landFlg");
            return (Criteria) this;
        }

        public Criteria andLandFlgBetween(Integer value1, Integer value2) {
            addCriterion("LAND_FLG between", value1, value2, "landFlg");
            return (Criteria) this;
        }

        public Criteria andLandFlgNotBetween(Integer value1, Integer value2) {
            addCriterion("LAND_FLG not between", value1, value2, "landFlg");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgIsNull() {
            addCriterion("HEAD_LAND_FLG is null");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgIsNotNull() {
            addCriterion("HEAD_LAND_FLG is not null");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgEqualTo(String value) {
            addCriterion("HEAD_LAND_FLG =", value, "headLandFlg");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgNotEqualTo(String value) {
            addCriterion("HEAD_LAND_FLG <>", value, "headLandFlg");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgGreaterThan(String value) {
            addCriterion("HEAD_LAND_FLG >", value, "headLandFlg");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgGreaterThanOrEqualTo(String value) {
            addCriterion("HEAD_LAND_FLG >=", value, "headLandFlg");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgLessThan(String value) {
            addCriterion("HEAD_LAND_FLG <", value, "headLandFlg");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgLessThanOrEqualTo(String value) {
            addCriterion("HEAD_LAND_FLG <=", value, "headLandFlg");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgLike(String value) {
            addCriterion("HEAD_LAND_FLG like", value, "headLandFlg");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgNotLike(String value) {
            addCriterion("HEAD_LAND_FLG not like", value, "headLandFlg");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgIn(List<String> values) {
            addCriterion("HEAD_LAND_FLG in", values, "headLandFlg");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgNotIn(List<String> values) {
            addCriterion("HEAD_LAND_FLG not in", values, "headLandFlg");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgBetween(String value1, String value2) {
            addCriterion("HEAD_LAND_FLG between", value1, value2, "headLandFlg");
            return (Criteria) this;
        }

        public Criteria andHeadLandFlgNotBetween(String value1, String value2) {
            addCriterion("HEAD_LAND_FLG not between", value1, value2, "headLandFlg");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COMPANY
     *
     * @mbggenerated do_not_delete_during_merge Sat Oct 25 20:29:13 JST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COMPANY
     *
     * @mbggenerated Sat Oct 25 20:29:13 JST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}